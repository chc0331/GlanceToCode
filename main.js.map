{
  "version": 3,
  "sources": ["src/extract.ts", "src/map.ts", "src/generate.ts", "src/run_pipeline.ts", "src/main.ts"],
  "sourcesContent": ["import { FigmaNode } from './types';\n\nexport function extractNode(node: SceneNode): FigmaNode | null {\n  const baseNode: FigmaNode = {\n    id: node.id,\n    type: node.type,\n    name: node.name,\n    x: Math.round(node.x),\n    y: Math.round(node.y),\n    width: Math.round(node.width),\n    height: Math.round(node.height),\n  };\n\n  if ('fills' in node && node.fills && node.fills !== figma.mixed) {\n    baseNode.fills = node.fills as ReadonlyArray<Paint>;\n  }\n\n  if (node.type === 'TEXT') {\n    const textNode = node as TextNode;\n    baseNode.characters = textNode.characters;\n    baseNode.fontSize = textNode.fontSize as number;\n    baseNode.fontName = textNode.fontName as FontName;\n    baseNode.textAlignHorizontal = textNode.textAlignHorizontal;\n    baseNode.textAlignVertical = textNode.textAlignVertical;\n  }\n\n  if (node.type === 'FRAME' || node.type === 'COMPONENT' || node.type === 'INSTANCE') {\n    const frameNode = node as FrameNode;\n    baseNode.layoutMode = frameNode.layoutMode;\n    baseNode.primaryAxisAlignItems = frameNode.primaryAxisAlignItems;\n    baseNode.counterAxisAlignItems = frameNode.counterAxisAlignItems;\n    baseNode.paddingLeft = frameNode.paddingLeft;\n    baseNode.paddingRight = frameNode.paddingRight;\n    baseNode.paddingTop = frameNode.paddingTop;\n    baseNode.paddingBottom = frameNode.paddingBottom;\n    baseNode.itemSpacing = frameNode.itemSpacing;\n  }\n\n  if ('children' in node && node.children) {\n    baseNode.children = node.children\n      .map(child => extractNode(child))\n      .filter((child): child is FigmaNode => child !== null);\n  }\n\n  return baseNode;\n}\n", "import { FigmaNode, GlanceComponent } from './types';\n\nexport function mapNodeToComponent(node: FigmaNode): GlanceComponent | null {\n  switch (node.type) {\n    case 'RECTANGLE':\n      return mapRectangleToBox(node);\n    case 'TEXT':\n      return mapTextToText(node);\n    case 'FRAME':\n    case 'COMPONENT':\n    case 'INSTANCE':\n      return mapFrameToContainer(node);\n    default:\n      console.warn(`Unsupported node type: ${node.type}`);\n      return null;\n  }\n}\n\nexport function mapRectangleToBox(node: FigmaNode): GlanceComponent {\n  const modifier = buildModifier(node);\n  let backgroundColor = '';\n  if (node.fills && node.fills.length > 0) {\n    const solid = node.fills.find((p): p is SolidPaint => p.type === 'SOLID');\n    if (solid) {\n      const r = Math.round((solid.color.r || 0) * 255);\n      const g = Math.round((solid.color.g || 0) * 255);\n      const b = Math.round((solid.color.b || 0) * 255);\n      backgroundColor = `Color(${r}, ${g}, ${b})`;\n    }\n  }\n\n  return {\n    type: 'Box',\n    modifier,\n    properties: {\n      width: node.width,\n      height: node.height,\n      x: node.x,\n      y: node.y,\n      backgroundColor,\n    },\n  };\n}\n\nexport function mapTextToText(node: FigmaNode): GlanceComponent {\n  const modifier = buildModifier(node);\n  return {\n    type: 'Text',\n    modifier,\n    content: node.characters || '',\n    properties: {\n      width: node.width,\n      height: node.height,\n      x: node.x,\n      y: node.y,\n      text: node.characters || '',\n      fontSize: node.fontSize,\n      textAlign: mapTextAlign(node.textAlignHorizontal),\n    },\n  };\n}\n\nexport function mapFrameToContainer(node: FigmaNode): GlanceComponent {\n  const modifier = buildModifier(node);\n  let containerType: 'Column' | 'Row' | 'Box' = 'Box';\n  if (node.layoutMode === 'VERTICAL') {\n    containerType = 'Column';\n  } else if (node.layoutMode === 'HORIZONTAL') {\n    containerType = 'Row';\n  }\n\n  const children: GlanceComponent[] = [];\n  if (node.children) {\n    for (const child of node.children) {\n      const childComponent = mapNodeToComponent(child);\n      if (childComponent) {\n        children.push(childComponent);\n      }\n    }\n  }\n\n  return {\n    type: containerType,\n    modifier,\n    children,\n    properties: {\n      width: node.width,\n      height: node.height,\n      x: node.x,\n      y: node.y,\n      padding: {\n        start: node.paddingLeft,\n        end: node.paddingRight,\n        top: node.paddingTop,\n        bottom: node.paddingBottom,\n      },\n      spacing: node.itemSpacing,\n      alignment: mapAlignment(node.primaryAxisAlignItems, node.counterAxisAlignItems),\n    },\n  };\n}\n\nexport function buildModifier(node: FigmaNode): string {\n  const parts: string[] = [];\n  if (node.x !== 0 || node.y !== 0) {\n    parts.push(`offset(x = ${node.x}.dp, y = ${node.y}.dp)`);\n  }\n  parts.push(`size(width = ${node.width}.dp, height = ${node.height}.dp)`);\n  return parts.join('\\n        .');\n}\n\nexport function mapTextAlign(align?: string): string {\n  switch (align) {\n    case 'CENTER': return 'TextAlign.Center';\n    case 'RIGHT': return 'TextAlign.End';\n    case 'JUSTIFIED': return 'TextAlign.Justify';\n    default: return 'TextAlign.Start';\n  }\n}\n\nexport function mapAlignment(primary?: string, counter?: string): string {\n  if (primary === 'CENTER' && counter === 'CENTER') {\n    return 'Alignment.Center';\n  }\n  return 'Alignment.TopStart';\n}\n", "import { GlanceComponent } from './types';\n\nexport function generateImports(): string {\n  return `import androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.background\nimport androidx.compose.material3.*\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.unit.dp\nimport androidx.glance.*\nimport androidx.glance.action.*\nimport androidx.glance.appwidget.*\nimport androidx.glance.appwidget.action.*\nimport androidx.glance.layout.*\nimport androidx.glance.text.*`;\n}\n\nexport function generateComponent(component: GlanceComponent, indentLevel: number): string {\n  const indent = '    '.repeat(indentLevel);\n  const nextIndent = '    '.repeat(indentLevel + 1);\n  let code = '';\n  switch (component.type) {\n    case 'Box':\n      code += generateBox(component, indent, nextIndent);\n      break;\n    case 'Column':\n      code += generateColumn(component, indent, nextIndent);\n      break;\n    case 'Row':\n      code += generateRow(component, indent, nextIndent);\n      break;\n    case 'Text':\n      code += generateText(component, indent);\n      break;\n    default:\n      code += `${indent}// Unsupported component type: ${component.type}\\n`;\n  }\n  return code;\n}\n\nfunction generateBox(component: GlanceComponent, indent: string, nextIndent: string): string {\n  let code = `${indent}Box(\\n`;\n  code += `${nextIndent}modifier = Modifier\\n`;\n  if (component.modifier) {\n    code += `${nextIndent}    .${component.modifier}\\n`;\n  }\n  if (component.properties.backgroundColor) {\n    code += `${nextIndent}    .background(${component.properties.backgroundColor})\\n`;\n  }\n  code += `${nextIndent}\\n`;\n  if (component.children && component.children.length > 0) {\n    code += `${nextIndent}) {\\n`;\n    for (const child of component.children) {\n      code += generateComponent(child, component.children!.indexOf(child) + 2);\n    }\n    code += `${nextIndent}}\\n`;\n  } else {\n    code += `${nextIndent}) {}\\n`;\n  }\n  return code;\n}\n\nfunction generateColumn(component: GlanceComponent, indent: string, nextIndent: string): string {\n  let code = `${indent}Column(\\n`;\n  code += `${nextIndent}modifier = Modifier\\n`;\n  if (component.modifier) {\n    code += `${nextIndent}    .${component.modifier}\\n`;\n  }\n  if (component.properties.spacing) {\n    code += `${nextIndent}    .padding(${component.properties.spacing}.dp)\\n`;\n  }\n  code += `${nextIndent}\\n`;\n  if (component.children && component.children.length > 0) {\n    code += `${nextIndent}) {\\n`;\n    for (const child of component.children) {\n      code += generateComponent(child, component.children!.indexOf(child) + 2);\n    }\n    code += `${nextIndent}}\\n`;\n  } else {\n    code += `${nextIndent}) {}\\n`;\n  }\n  return code;\n}\n\nfunction generateRow(component: GlanceComponent, indent: string, nextIndent: string): string {\n  let code = `${indent}Row(\\n`;\n  code += `${nextIndent}modifier = Modifier\\n`;\n  if (component.modifier) {\n    code += `${nextIndent}    .${component.modifier}\\n`;\n  }\n  if (component.properties.spacing) {\n    code += `${nextIndent}    .padding(${component.properties.spacing}.dp)\\n`;\n  }\n  code += `${nextIndent}\\n`;\n  if (component.children && component.children.length > 0) {\n    code += `${nextIndent}) {\\n`;\n    for (const child of component.children) {\n      code += generateComponent(child, component.children!.indexOf(child) + 2);\n    }\n    code += `${nextIndent}}\\n`;\n  } else {\n    code += `${nextIndent}) {}\\n`;\n  }\n  return code;\n}\n\nfunction generateText(component: GlanceComponent, indent: string): string {\n  let code = `${indent}Text(\\n`;\n  code += `${indent}    text = \"${component.properties.text || ''}\",\\n`;\n  if (component.properties.fontSize) {\n    code += `${indent}    fontSize = ${component.properties.fontSize}.sp,\\n`;\n  }\n  if (component.properties.textAlign) {\n    code += `${indent}    textAlign = ${component.properties.textAlign},\\n`;\n  }\n  code += `${indent}    modifier = Modifier\\n`;\n  if (component.modifier) {\n    code += `${indent}        .${component.modifier}\\n`;\n  }\n  code += `${indent})\\n`;\n  return code;\n}\n", "// Design to Code Plugin - Pipeline Architecture\n// Converts Figma designs to Jetpack Glance code\n\nimport { FigmaNode, GlanceComponent } from './types';\nimport { extractNode } from './extract';\nimport { mapNodeToComponent } from './map';\nimport { generateImports, generateComponent } from './generate';\n\n// Main Pipeline Function\nexport async function runPipeline(): Promise<void> {\n  console.log(\"\uD83D\uDE80 Pipeline started\");\n  \n  try {\n    // Get current selection\n    const selection = figma.currentPage.selection;\n    if (selection.length === 0) {\n      figma.notify(\"Please select some nodes to convert\");\n      figma.closePlugin();\n      return;\n    }\n\n    // Stage 1: Extract Figma Nodes\n    const nodes: FigmaNode[] = [];\n    for (const node of selection) {\n      const extractedNode = extractNode(node);\n      if (extractedNode) {\n        nodes.push(extractedNode);\n      }\n    }\n\n    if (nodes.length === 0) {\n      figma.notify(\"No supported nodes found in selection\");\n      figma.closePlugin();\n      return;\n    }\n\n    // Stage 2: Mapping - Transform Figma to Glance\n    const components: GlanceComponent[] = [];\n    for (const node of nodes) {\n      const component = mapNodeToComponent(node);\n      if (component) {\n        components.push(component);\n      }\n    }\n\n    // Stage 3: Generate Code\n    let code = generateImports();\n    code += '\\n\\n';\n    code += '@Composable\\nfun GeneratedFromFigma() {\\n';\n    \n    for (const component of components) {\n      code += generateComponent(component, 1);\n    }\n    \n    code += '}';\n\n    // Stage 4: Output\n    figma.showUI(__html__, { width: 600, height: 500 });\n    figma.ui.postMessage({ type: 'code', code });\n    \n    // Set up message handling\n    figma.ui.onmessage = (msg) => {\n      if (msg.type === 'close') {\n        figma.closePlugin();\n      }\n    };\n\n    console.log(\"\u2705 Pipeline finished successfully\");\n    \n  } catch (error) {\n    console.error(\"\u274C Pipeline failed:\", error);\n    figma.notify(`Pipeline error: ${error}`);\n    figma.closePlugin();\n  }\n}", "// Main plugin entry point\nimport {runPipeline} from \"./run_pipeline\";\n\nfigma.on(\"run\", async () => {\n  try {\n    await runPipeline();\n  } catch (error) {\n    console.error(\"Plugin error:\", error);\n    figma.notify(`Error: ${error}`);\n    figma.closePlugin();\n  }\n});\n"],
  "mappings": "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",
  "names": []
}
